#!/usr/bin/env bash

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_color() {
    echo -e "${1}${2}${NC}"
}

# Get the directory of the script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"

print_color "$BLUE" "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
print_color "$BLUE" "‚ïë    üîß ACK Lab Demo Setup (Replit)         ‚ïë"
print_color "$BLUE" "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo

# Change to project directory
cd "$PROJECT_DIR"

# Function to prompt for API key
prompt_for_key() {
    local key_name=$1
    local key_description=$2
    local key_value=""

    print_color "$YELLOW" "‚ö†Ô∏è  $key_name not found in .env file"
    echo "$key_description"
    read -p "Enter your $key_name (or press Enter to skip): " key_value

    if [ -n "$key_value" ]; then
        echo "$key_name=$key_value" >> .env
        print_color "$GREEN" "‚úÖ $key_name added to .env file"
    else
        print_color "$YELLOW" "‚è≠Ô∏è  Skipping $key_name (you can add it later)"
    fi
    echo
}

# Check and create .env file
print_color "$BLUE" "üìã Checking environment configuration..."

if [ ! -f .env ]; then
    print_color "$YELLOW" "üìù Creating .env file..."
    touch .env
    ENV_CREATED=true
else
    print_color "$GREEN" "‚úÖ .env file exists"
    ENV_CREATED=false
fi

# Load existing .env if it exists
if [ -f .env ]; then
    set -a
    source .env 2>/dev/null || true
    set +a
fi

# Check for OPENAI_API_KEY
if [ -z "$OPENAI_API_KEY" ]; then
    if ! grep -q "^OPENAI_API_KEY=" .env 2>/dev/null; then
        prompt_for_key "OPENAI_API_KEY" "This is required for AI-powered agent responses using OpenAI."
    fi
else
    print_color "$GREEN" "‚úÖ OPENAI_API_KEY is configured"
fi

# Check for ACK_LAB_API_KEY
if [ -z "$ACK_LAB_API_KEY" ]; then
    if ! grep -q "^ACK_LAB_API_KEY=" .env 2>/dev/null; then
        prompt_for_key "ACK_LAB_API_KEY" "This is required for ACK Lab services integration."
    fi
else
    print_color "$GREEN" "‚úÖ ACK_LAB_API_KEY is configured"
fi

# Install dependencies using pnpm
print_color "$BLUE" "üì¶ Installing dependencies with pnpm..."
echo

# Ensure pnpm is available
if ! command -v pnpm &> /dev/null; then
    print_color "$RED" "‚ùå pnpm is not installed."
    echo "Install pnpm, for example: npm install -g pnpm (or run 'corepack enable')"
    exit 1
fi

# Install main project dependencies
print_color "$YELLOW" "Installing demo server dependencies..."
pnpm install

# Install web-ui dependencies
print_color "$YELLOW" "Installing web UI dependencies..."
cd "$PROJECT_DIR/web-ui"
pnpm install

# Return to project directory
cd "$PROJECT_DIR"

print_color "$GREEN" "\n‚úÖ Setup complete!"
echo
print_color "$BLUE" "To run the demo:"
print_color "$YELLOW" "  Server: pnpm run demo:unified"
print_color "$YELLOW" "  UI:     cd web-ui && pnpm run dev"
echo

